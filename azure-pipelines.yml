# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pr:
- main

pool:
  vmImage: ubuntu-latest

steps:

- script: |
    sudo apt-get install
    sudo apt-get install -y npm
  displayName: 'install and update npm'

- script: |
    npm audit || true
  displayName: 'npm audit'

- script: |
   npm test || true
  displayName: 'npm test'

- script: |
    sonar-scanner ||true
  displayName: 'review code'

- script: |
    sudo npm install
    sudo npm run build
  displayName: 'npm build'  
  
- script: |
    sudo apt-get install wget apt-transport-https gnupg lsb-release
    wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
    echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
    sudo apt-get update
    sudo apt-get install trivy

  displayName: 'Trivy scanner'  

- script: |
    trivy config Dockerfile
  displayName: 'Dockerfile scanning'

- script: |
    Base_image=`grep FROM Dockerfile | awk '{print$2}'`
    trivy image $Base_image
  displayName: 'Docker image scanning'

- script: |
    sudo docker build -t puneetgo/test1.0.0 .
  displayName: 'building docker image'

- script: |
    echo $(docker_hub_password) | sudo docker login --username $(docker_hub_username) --password-stdin
    sudo docker push puneetgo/test1.0.0
  displayName: 'docker login and image push'


- task: KubernetesManifest@0
  displayName: Deploy to Kubernetes cluster
  inputs:
    kubernetesServiceConnection: gke-test
    action: deploy
    manifests: |
      k8s/simple/frontend-deployment.yaml
      k8s/simple/service.yml

 